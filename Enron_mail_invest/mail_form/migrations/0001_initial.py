# Generated by Django 5.0.2 on 2024-04-04 22:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.CharField(max_length=50, null=True)),
                ("lastname", models.CharField(max_length=50)),
                ("firstname", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Word",
            fields=[
                (
                    "word",
                    models.CharField(
                        max_length=1000, primary_key=True, serialize=False
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Mailbox",
            fields=[
                (
                    "address",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("is_internal", models.BooleanField(default=False, null=True)),
                (
                    "employee",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mailboxes",
                        to="mail_form.employee",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Conversation",
            fields=[
                (
                    "subject",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        related_name="conversations", to="mail_form.mailbox"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Mail",
            fields=[
                (
                    "message_id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("date", models.DateTimeField(null=True)),
                ("subject", models.CharField(max_length=200, null=True)),
                ("content", models.TextField(max_length=10000, null=True)),
                (
                    "conversation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mails",
                        to="mail_form.conversation",
                    ),
                ),
                (
                    "bcc",
                    models.ManyToManyField(
                        related_name="bcc_mails", to="mail_form.mailbox"
                    ),
                ),
                (
                    "cc",
                    models.ManyToManyField(
                        related_name="cc_mails", to="mail_form.mailbox"
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_mails",
                        to="mail_form.mailbox",
                    ),
                ),
                (
                    "to",
                    models.ManyToManyField(
                        related_name="received_mails", to="mail_form.mailbox"
                    ),
                ),
                (
                    "word",
                    models.ManyToManyField(
                        related_name="word_mails", to="mail_form.word"
                    ),
                ),
            ],
        ),
    ]
